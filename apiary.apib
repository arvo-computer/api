FORMAT: 1A
HOST: https://arvo.computer

# AR.VO API

## Authority [/api/authority]

Certificate AR.VO Authority service is AR.VO public API to
internal X.509 identity fabrique enrollment facilities
that include CA, Ð¡MP, OCSP, TSP servers
with CMC/EST enrollment ASN.1 protocols
hidden behind simple and clean HTTP AR.VO API.

<b>Data Structures</b>: CSR, Certificate, Person, Avatar, Computer, Service, Network.

### Enroll Certificate [POST]

+ Request (application/json)
    + Attributes (object)
        + `csr` (string, required) - Base64 CSR in ASN.1 DER
        + `spaces`: abac:merchant,abac:vagrant,abac:freelancer (array)
 
+ Response 201 (application/json)
    + Attributes (`Certificate`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)

### Validate Certificate [GET /api/authority/{id}/validate]

+ Request (application/json)
    + Attributes
        + `certificate`: (string, required) - ASN.1 DER encoded Certificate

+ Response 201 (application/json)
    + Attributes (`Certificate`)

+ Response 400
    + Attributes (`Error`)

+ Response 500 (application/json)

### Update Certificate [PATCH /api/authority/{id}/update]

+ Request (application/json)
    + Attributes
        + `csr`: (string, required) - CSR in ASN.1 DER Base64 encoded

+ Response 201 (application/json)
    + Attributes (`Certificate`)

+ Response 204

+ Response 500 (application/json)
    + Attributes (`Error`)

### Revoke Certificate [DELETE /api/authority/{id}/revoke]

+ Request (application/json)
    + Attributes
        + `serial`:  (string, required)

+ Response 200 (application/json)

+ Response 400
    + Attributes (`Error`)

+ Response 500 (application/json)

## Memory [/api/memory]

AR.VO Memory is a distributed storage that can persist
objects in JSON Schema Draft-07 verifiable format. Each type of objects
can be handled on diffferent nodes with different backends. Universality
is done in ISO/HL7 FHIR fashion based on AR.VO Schema.

<b>Data Structures</b>: Asset, File, Message, Document, License, Product, Service, Application.

### Register Schema [POST /api/memory/schema]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of person that is accosiated with user who initiated access token generation
        + `resourceType` (string, required) - AR.VO Schema Object
        + `status` (string, required)
        + `signature` (string, required)

+ Response 201 (application/json)
    + Attributes (`Resource`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Allocate Resource [POST /api/memory]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of person that is accosiated with user who initiated access token generation
        + `resourceType` (string, required) - AR.VO Schema Object
        + `status` (string, required)
        + `signature` (string, required)

+ Response 201 (application/json)
    + Attributes (`Resource`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Retrieve Resource [GET /api/memory/{id}/get]

+ Request (application/json)
    + Attributes
        + `id`: `a48cc83a-7aad-47c6-9487-2a566dc669a7` (string, required)
        + `status` (string, required)
        + `changed_at` (string, required)

+ Response 200 (application/json)
    + Attributes (`Certificate`)

+ Response 204

+ Response 500 (application/json)
    + Attributes (`Error`)

### Modify Resource [PATCH /api/memory/{id}/modify]

+ Request (application/json)
    + Attributes (`Resource`)

+ Response 200 (application/json)
    + Attributes (`Resource`)

+ Response 204

+ Response 500 (application/json)
    + Attributes (`Error`)

### Deallocate Resource [DELETE /api/memory/{id}/deallocate]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of the process

+ Response 201 (application/json)
    + Attributes (`Resource`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

## Logic [/api/logic]

Distributed process pattern than should be described and managed
as ISO 19510 BPMN model in correspondence to <a HREF="https://bpmn.io">bpmn.io</a> and Camunda
presented as AR.VO Logic API. All predefined and user contracts are managed as XML defined BPMN processes.

<b>Data Structures</b>: Contract, Process, Document, Edge, Node.

### Register Contract [POST /api/logic/contract]

+ Request (application/json)
    + Attributes (`Contract`)

+ Response 201 (application/json)
    + Attributes (`Contract`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Spawn Process [POST /api/logic]

+ Request (application/json)
    + Attributes (`Process`)

+ Response 201 (application/json)
    + Attributes (`Process`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Process Edge [PUT /api/logic/{id}/next]

+ Request (application/json)
    + Attributes (`Process`)

+ Response 201 (application/json)
    + Attributes (`Edge`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Retrieve Process [GET /api/logic/{id}/get]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of the process

+ Response 201 (application/json)
    + Attributes (`Process`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Amend Process [PATCH /api/logic/{id}/amend]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of the process

+ Response 201 (application/json)
    + Attributes (`Process`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)


### Terminate Process [DELETE /api/logic/{id}/terminate]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of the process

+ Response 201 (application/json)
    + Attributes (`Process`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

## Space [/api/space]

Virtual environments that represent spaces contains interactive
gems that represent published works in context-aware spatial Geo container of 3D-space.
The laws of gem interactions are defined by logic of space, its contracts. Each space
may be managed by different authority.

<b>Data Structures</b>: Space, Gem, Network, Service, Avatar.

### Enter Space [GET /api/space]

+ Request (application/json)
    + Attributes (object)
        + `id`: `IVA` (string, required) - Identifier of the space

+ Response 201 (application/json)
    + Attributes (`Gem`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Publish Gem [POST /api/space/publish]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of the process

+ Response 201 (application/json)
    + Attributes (`Gem`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Search Gems [GET /api/space/search]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of the process

+ Response 201 (application/json)
    + Attributes (`Gem`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Retrieve Gem [GET /api/space/{id}/get]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of the process

+ Response 201 (application/json)
    + Attributes (`Gem`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Connect Event Stream [GET /api/space/{id}/stream]

+ Request (application/json)

+ Response 101 (application/json)

+ Response 400 (application/json)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Gem Interaction [PUT /api/space/{id}/activate]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of the process

+ Response 201 (application/json)
    + Attributes (`Process`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

### Retire Gem [DELETE /api/space/{id}/retire]

+ Request (application/json)
    + Attributes (object)
        + `id`: `7017480851` (number, required) - Identifier of the process

+ Response 201 (application/json)
    + Attributes (`Gem`)

+ Response 400 (application/json)
    + Attributes (`Error`)

+ Response 422 (application/json)
    + Attributes (`ValidationError`)

+ Response 500 (application/json)
    + Attributes (`Error`)

# Data Structures

## Certificate (object)
+ `serial`: `984375` (number, required) - Identifier of certificate
+ `subject`: `arvo.computer` (string, required)
+ `cn` (string, required)
+ `certificate` (string, required) - ASN.1 DER encoded certificate

## Resource (object)
+ `id`: `984375` (number, required) - Identifier of person that is accosiated with user who initiated access token generation
+ `status` (string, required)
+ `parent` (string, required)

## Process (object)
+ `id`: `984375` (number, required) - Identifier of person that is accosiated with user who initiated access token generation
+ `status` (string, required)
+ `parent` (string, required)

## Edge (object)
+ `id`: `984375` (number, required) - Identifier of person that is accosiated with user who initiated access token generation
+ `status` (string, required)
+ `parent` (string, required)

## Gem (object)
+ `id`: `984375` (number, required) - Identifier of person that is accosiated with user who initiated access token generation
+ `status` (string, required)
+ `parent` (string, required)

## Contract (object)
+ `id`: `984375` (number, required) - Identifier of person that is accosiated with user who initiated access token generation
+ `status` (string, required)
+ `parent` (string, required)

## ValidationError (Error)
- `type`: `validation_error` (fixed)
- `message`: `Validation failed` (string, required)
- `errors` (object, required)

## Error (object)
+ `type`: `example_error` (string, required) - Machine-readable error type
+ `message`: `Example error message` (string, required) - Human-readable error description
